@model AutotuneWeb.Models.OapsProfile
@using System.Globalization
@{
    ViewBag.Title = "Converted Profile";

    var profileActivation = (DateTime)ViewBag.ProfileActivation;
    long ticks = 0;
    int days;
    if (profileActivation > DateTime.MinValue)
    {
        var activation = profileActivation.Date;
        if (profileActivation.Hour > 12)
        {
            activation = activation.AddDays(1);
        }
        var today = DateTime.UtcNow.Date;
        var activeSince = today - activation;
        days = Math.Max(Math.Min((int)activeSince.TotalDays, 7), 1);
        ticks = new DateTimeOffset(profileActivation).ToUnixTimeMilliseconds();
    }
    else
    {
        days = 7;
    }

    var profileJson = Newtonsoft.Json.JsonConvert.SerializeObject(Model, Newtonsoft.Json.Formatting.Indented);
    var timezone = (string)ViewBag.TimeZone;
    var units = (string)ViewBag.Units;
    var mmol = units.ToLower().Contains("mmol");
    var unitsString = mmol ? "mmol/L" : "md/dL";
    var isf = Model.IsfProfile.Sensitivities[0].Sensitivity;
    if (mmol)
    {
        isf /= 18;
    }
}

@if (ViewBag.PreviousResults)
{
    <div class="alert alert-info">
        <p>Looking for your previous results?</p>
        <p>
            <a href="/Results/Index?nsUrl=@Uri.EscapeDataString(ViewBag.NSUrl.ToString())" class="btn btn-success">View Results</a>
        </p>
    </div>
}

<h1>Converted Profile</h1>

<p>
    Thank you, your Nightscout profile has been converted ready to use for Autotune.
    Please double-check that the details below are correct before running Autotune:
</p>

@{
    var warnings = (List<string>)ViewBag.Warnings;
}
@if (warnings != null && warnings.Count > 0)
{
    <div class="alert alert-warning">
        @foreach (var warning in warnings)
        {
            if (warning.Contains("\"rate\""))
            {
                <p>@Html.ActionLink(warning, "MissingRate")</p>
            }
            else
            {
                <p>@warning</p>
            }
        }
    </div>
}

<table class="table table-striped">
    <tr>
        <th style="width: 12%">Profile Name</th>
        <td>@ViewBag.ProfileName</td>
    </tr>
    <tr>
        <th>Profile Activation</th>
        <td>
            @if (profileActivation == DateTime.MinValue)
            {
                <i class="fa fa-exclamation"></i> <i>Unknown</i>
            }
            else
            {
                <script>
                    document.writeln(new Date(@ticks).toLocaleString());
                </script>
            }
        </td>
    </tr>
    <tr>
        <th>Timezone</th>
        <td>
            @if (String.IsNullOrEmpty(timezone))
            {
                <i class="fa fa-exclamation"></i> <i>Unknown</i>
            }
            else
            {
                @timezone
            }
        </td>
    </tr>
    <tr>
        <th>Units</th>
        <td>
            @if (mmol)
            {
                @:mmol/L
            }
            else
            {
                @:mg/dL
            }
        </td>
    </tr>
    <tr>
        <th>ISF</th>
        <td>@isf.ToString("0.#") @unitsString</td>
    </tr>
    <tr>
        <th>CR</th>
        <td>@Model.CarbRatio.ToString("0.#") g/U</td>
    </tr>
    <tr>
        <th>Basal&nbsp;Profile</th>
        <td>
            <div class="timeline">
                @{
                    var minutesInDay = 24 * 60;
                    var maxValue = Model.BasalProfile.Max(b => b.Rate);
                }
                @for (var i = 0; i < Model.BasalProfile.Length; i++)
                {
                    var basal = Model.BasalProfile[i];
                    var endTime = i < Model.BasalProfile.Length - 1 ? Model.BasalProfile[i + 1].Minutes : minutesInDay;
                    var duration = endTime - basal.Minutes;
                    var title = $"{TimeSpan.FromMinutes(basal.Minutes):hh\\:mm} - {TimeSpan.FromMinutes(endTime):hh\\:mm}: {basal.Rate:0.00} U/h";

                    <div class="timeline-block" style="width: @((duration * 100f / minutesInDay).ToString(CultureInfo.InvariantCulture))%; height: @((basal.Rate * 100 / maxValue).ToString(CultureInfo.InvariantCulture))px; margin-top: @((100 - (basal.Rate * 100 / maxValue)).ToString(CultureInfo.InvariantCulture))px" title="@title">
                    </div>
                }
            </div>
        </td>
    </tr>
</table>

<h2>Running Autotune Yourself</h2>

<ol>
    <li>
        Copy &amp; paste your converted profile below into <code>profile.json</code>,
        <code>pumpprofile.json</code> and <code>autotune.json</code>
        <input type="button" class="btn btn-default btn-sm" value="Show" id="showprofilejson" />
<pre id="profilejson" style="display: none">
@profileJson
</pre>
    </li>
    <li>
        Run Autotune with
        @if (String.IsNullOrEmpty(ViewBag.ApiSecret))
        {
            <code>oref0-autotune --dir=~/myopenaps --ns-host=@ViewBag.NSUrlBase --start-date=YYYY-MM-DD</code>
        }
        else
        {
            <code>API_SECRET=@ViewBag.ApiSecret oref0-autotune --dir=~/myopenaps --ns-host=@ViewBag.NSUrlBase --start-date=YYYY-MM-DD</code>
        }
    </li>
</ol>

<h2>Running Autotune in the Cloud</h2>

<p>
    Complete the remaining fields below to run Autotune on this profile
</p>

@using (Html.BeginForm("RunJob", "Home"))
{
    @Html.Hidden("nsUrl", (Uri)ViewBag.NSUrl)
    @Html.Hidden("apiSecret", (string)ViewBag.ApiSecret)
    @Html.Hidden("oapsProfile", profileJson)
    @Html.Hidden("units", (string)ViewBag.Units)
    @Html.Hidden("timezone", (string)ViewBag.TimeZone)
    <p>
        Ready to run Autotune now? Enter a few more details, then click Run Now to have us run Autotune for you.
    </p>

    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                <label for="min5MinCarbImpact">Min. 5 Minutes Carb Impact</label>
                <div class="input-group">
                    <input type="number" step="0.1" min="1" max="20" name="min5MCarbImpact" value="@Model.Min5mCarbImpact" class="form-control" required />
                    <span class="input-group-addon">mg/dL/5m</span>
                </div>
            </div>
        </div>
        <div class="col-md-8">
            <div class="alert alert-info">
                The minimum amount of the expected carb impact that should be assumed when no carb absorption is identified from the CGM data,
                forcing the remaining carbs on board to decay.
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                <label for="pumpBasalIncrement">Pump Basal Increment</label>
                <div class="input-group">
                    <input type="number" step="0.005" min="0.005" max="1" name="pumpBasalIncrement" value="0.01" class="form-control" required />
                    <span class="input-group-addon">U/h</span>
                </div>
            </div>
        </div>
        <div class="col-md-8">
            <div class="alert alert-info">
                Autotune will likely recommend basals in fractions of a unit that you can't program into your pump, so enter here what
                increments your pump can handle (0.1, 0.5 etc.) to get your results rounded for you.
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-4">
            <div class="checkbox">
                <label>
                    <input type="checkbox" name="uamAsBasal" value="true" />
                    Categorize UAM as basal
                </label>
            </div>
        </div>
        <div class="col-md-8">
            <div class="alert alert-info">
                If Autotune sees some sudden rises in your CGM data, it may conclude that there were carbs eaten but not entered into Nightscout.
                If you have reliably entered all carbs eaten, tick this box and those rises will be used to recommend changes to the basal rate.
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-4">
            <label for="curve">Insulin Type</label>
            <select name="curve" class="form-control">
                <option value="rapid-acting">Rapid Acting (Humalog/Novolog/Novorapid)</option>
                <option value="ultra-rapid">Ultra Rapid (Fiasp)</option>
            </select>
        </div>
        <div class="col-md-8">
            <div class="alert alert-info">
                Select the type of insulin you use so that Autotune can tell how quickly it acts and decays.
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-4">
            <label for="days">Days of Data</label>
            <div class="input-group">
                <input type="number" name="days" min="1" max="30" value="@days" class="form-control" required />
                <span class="input-group-addon">days</span>
            </div>
        </div>
        <div class="col-md-8">
            <div class="alert alert-info">
                The number of days of data to be processed by Autotune (up to 30)
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                <label for="emailResultsTo">Email Results To</label>
                <div class="input-group">
                    <span class="input-group-addon">@@</span>
                    <input type="email" name="emailResultsTo" class="form-control" required value="@ViewBag.Email" />
                </div>
            </div>
        </div>
        <div class="col-md-8">
            <div class="alert alert-info">
                Autotune takes a few minutes to run, so we'll email the results to you when they're ready. You should get them in 10 - 20 minutes,
                check your spam folder if you don't get it.
            </div>
        </div>
    </div>
    <p>
        <input type="submit" class="btn btn-success" value="Run Now" />
    </p>
}

@section scripts
{
    <script>
        $("#showprofilejson").click(function () {
            $("#profilejson").toggle();
        });
    </script>
}